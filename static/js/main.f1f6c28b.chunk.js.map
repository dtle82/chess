{"version":3,"sources":["components/side-notation.js","helpers.js","Store.js","components/Chessboard.js","components/History.js","App.js","index.js"],"names":["SideNotation","side_container","i","push","react_default","a","createElement","key","className","factory_piece","name","emoji","color","moveset","location","history","captureSet","status","Object","assign","create","isFree","getName","this","getColor","getMoveset","getCaptureSet","getEmoji","getLocation","setLocation","updateHistory","notation","setStatus","getIsFree","setBlocked","setFree","validate","length","getBoardNotation","paramTarget","rank","file","chessboard","document","getElementById","index","Array","prototype","indexOf","call","children","Math","floor","console","log","isOdd","num","alternateColor","HistoryContext","React","createContext","Store","_ref","_useState","useState","_useState2","slicedToArray","setHistory","Provider","value","bottomNotation","white_combined_position","fill","map","pawn","idx","concat","neutral_positions","generated_black_pawn_position","black_combined_position","Chessboard","_useContext","useContext","_useContext2","squares","setSquares","_useState3","_useState4","isSelected","setIsSelected","_useState5","_useState6","possibleMoves","setpossibleMoves","handleClick","event","target","nextSquares","slice","nextSelected","nextPossibleMoves","forEach","opponentSquare","selfSquare","hasOwnProperty","currentSelected","nextHistory","isPieceObject","obj","renderSquares","paramIndex","alternate","starting_color","onClick","board_array","quotient","id","History","moves","App","src_Store","components_side_notation","components_Chessboard","components_History","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.f1f6c28b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./side-notation.css\";\n\nfunction SideNotation() {\n  const side_container = [];\n  for (var i = 8; i >= 1; i--) {\n    side_container.push(\n      <div key={i} className=\"side-notation\">\n        {i}\n      </div>\n    );\n  }\n\n  return <div className=\"side-notation\">{side_container}</div>;\n}\n\nexport default SideNotation;\n","export const factory_piece = function(\n  name,\n  emoji,\n  color,\n  moveset,\n  location,\n  history,\n  captureSet,\n  status\n) {\n  const piece = {\n    isFree: true,\n\n    getName: function() {\n      return this.name;\n    },\n    getColor: function() {\n      return this.color;\n    },\n    getMoveset: function() {\n      return this.moveset;\n    },\n    getCaptureSet: function() {\n      return this.captureSet;\n    },\n    getEmoji: function() {\n      return this.emoji;\n    },\n    getLocation: function() {\n      return this.location;\n    },\n    setLocation: function(location) {\n      this.location = location;\n    },\n    updateHistory: function(notation) {\n      this.history.push(notation);\n    },\n    setStatus: function(status) {\n      this.status = status;\n    },\n    getIsFree: function() {\n      return this.isFree;\n    },\n    setBlocked: function() {\n      this.isFree = false;\n    },\n    setFree: function() {\n      this.isFree = true;\n    },\n    validate: function() {\n      // frees up block status before every click\n      this.setFree();\n      switch (this.emoji) {\n        case \"♟\":\n          if (this.history.length > 0) {\n            this.moveset = [8];\n          }\n          this.captureSet = [7, 9];\n          break;\n        case \"♙\":\n          if (this.history.length > 0) {\n            this.moveset = [-8];\n          }\n          this.captureSet = [-7, -9];\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  let obj = Object.assign(Object.create(piece), {\n    name,\n    emoji,\n    color,\n    moveset,\n    location,\n    history,\n    captureSet,\n    status\n  });\n  return obj;\n};\n\nexport const getBoardNotation = function(paramTarget) {\n  let chessboard = document.getElementById(\"chessboard\");\n  let index = Array.prototype.indexOf.call(chessboard.children, paramTarget);\n  let rank;\n  let file;\n\n  let rank_arr = [8, 7, 6, 5, 4, 3, 2, 1];\n  let file_arr = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\n  rank = rank_arr[Math.floor(index / 8)];\n  file = file_arr[index % 8];\n\n  let notation = file + rank;\n  console.log(\"algebraic notation\", file + rank);\n  //console.log(\"simple index\", index);\n\n  return { notation, index };\n};\n\nexport const isOdd = function(num) {\n  return num % 2;\n};\n\nexport const alternateColor = function(color) {\n  if (color === \"black\") {\n    color = \"white\";\n  } else {\n    color = \"black\";\n  }\n  return color;\n};\n","import React, { useState } from \"react\";\n\nexport const HistoryContext = React.createContext();\n\nconst Store = ({ children }) => {\n  const [history, setHistory] = useState([]);\n\n  return (\n    <HistoryContext.Provider value={[history, setHistory]}>\n      {children}\n    </HistoryContext.Provider>\n  );\n};\n\nexport default Store;\n","import React, { useState, useContext } from \"react\";\nimport {\n  getBoardNotation,\n  isOdd,\n  alternateColor,\n  factory_piece\n} from \"../helpers.js\";\nimport { HistoryContext } from \"../Store\";\n\nconst bottomNotation = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\nconst white_position = [\"♖\", \"♘\", \"♗\", \"♕\", \"♔\", \"♗\", \"♘\", \"♖\"];\nconst white_pawn_position = Array(8).fill(\"♙\");\nconst generated_white_pawn_position = white_pawn_position.map((pawn, idx) => {\n  const obj = factory_piece(\n    \"pawn\",\n    pawn,\n    \"white\",\n    [-8, -16],\n    idx + 48,\n    [],\n    [],\n    \"active\"\n  );\n  return obj;\n});\nconst white_combined_position = generated_white_pawn_position.concat(\n  white_position\n);\n\nconst neutral_positions = Array(4 * 8).fill(\"\");\nconst black_position = [\"♜\", \"♞\", \"♝\", \"♛\", \"♚\", \"♝\", \"♞\", \"♜\"];\nconst black_pawn_position = Array(8).fill(\"♟\");\n\nconst generated_black_pawn_position = black_pawn_position.map((pawn, idx) => {\n  const obj = factory_piece(\n    \"pawn\",\n    pawn,\n    \"black\",\n    [8, 16],\n    idx + 8,\n    [],\n    [],\n    \"active\"\n  );\n  return obj;\n});\nconst black_combined_position = black_position.concat(\n  generated_black_pawn_position\n);\n\nfunction Chessboard() {\n  const [history, setHistory] = useContext(HistoryContext);\n  const [squares, setSquares] = useState(\n    black_combined_position\n      .concat(neutral_positions)\n      .concat(white_combined_position)\n  );\n  const [isSelected, setIsSelected] = useState(Array(64).fill(false));\n  const [possibleMoves, setpossibleMoves] = useState(Array(64).fill(false));\n\n  const handleClick = event => {\n    const { index } = getBoardNotation(event.target);\n    const nextSquares = squares.slice();\n    nextSquares[index] = squares[index];\n    setSquares(nextSquares);\n\n    if (isSquareAlreadyClicked(isSelected[index])) {\n      const nextSelected = Array(64).fill(false);\n      nextSelected[index] = true;\n      setIsSelected(nextSelected);\n\n      const nextPossibleMoves = Array(64).fill(false);\n      setpossibleMoves(nextPossibleMoves);\n    }\n\n    if (isObject(squares[index])) {\n      const nextPossibleMoves = Array(64).fill(false);\n      squares[index].validate();\n      squares[index].getMoveset().forEach(idx => {\n        if (!nextSquares[index + idx] && squares[index].getIsFree()) {\n          nextPossibleMoves[index + idx] = true;\n        } else {\n          squares[index].setBlocked();\n        }\n      });\n      squares[index].getCaptureSet().forEach(idx => {\n        if (squareContainsOpponent(nextSquares[index + idx], squares[index])) {\n          nextPossibleMoves[index + idx] = true;\n        }\n      });\n      setpossibleMoves(nextPossibleMoves);\n    }\n\n    if (possibleMoves[index]) {\n      const nextSquares = squares.slice();\n      const currentSelected = Array.prototype.indexOf.call(isSelected, true);\n      nextSquares[currentSelected] = false;\n      nextSquares[index] = squares[currentSelected];\n      squares[currentSelected].setLocation(index);\n      squares[currentSelected].updateHistory(currentSelected);\n      const nextHistory = history.slice();\n      const { notation } = getBoardNotation(\n        document.getElementById(\"chessboard\").children[currentSelected]\n      );\n      nextHistory.push(notation + ` (${squares[currentSelected].getColor()})`);\n      setHistory(nextHistory);\n      setSquares(nextSquares);\n      const nextPossibleMoves = Array(64).fill(false);\n      setpossibleMoves(nextPossibleMoves);\n      setIsSelected(Array(64).fill(false));\n    }\n  };\n\n  function squareContainsOpponent(opponentSquare, selfSquare) {\n    //checks if possible capture square contains an opponent by checking if square contains object and that the colors do not match\n    return (\n      opponentSquare.hasOwnProperty(\"color\") &&\n      selfSquare.hasOwnProperty(\"color\") &&\n      opponentSquare.getColor() !== selfSquare.getColor()\n    );\n  }\n\n  function isSquareAlreadyClicked(square) {\n    return square === false;\n  }\n\n  function isObject(squareObject) {\n    return typeof squareObject == \"object\";\n  }\n\n  function isPieceObject(obj) {\n    return obj.hasOwnProperty(\"emoji\") ? obj.getEmoji() : obj;\n  }\n\n  function renderSquares(paramIndex, alternate) {\n    // if true, start the square on this rank with black\n    if (alternate) {\n      return (\n        <div\n          key={paramIndex}\n          className={\n            alternateColor(starting_color) +\n            (isSelected[paramIndex] ? \" selected\" : \"\") +\n            (possibleMoves[paramIndex] ? \" black-moves\" : \"\") +\n            (possibleMoves[paramIndex] && squares[paramIndex]\n              ? \" capture-moves\"\n              : \"\")\n          }\n          onClick={handleClick}\n        >\n          {isPieceObject(squares[paramIndex])}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          key={paramIndex}\n          className={\n            starting_color +\n            (isSelected[paramIndex] ? \" selected\" : \"\") +\n            (possibleMoves[paramIndex] ? \" black-moves\" : \"\") +\n            (possibleMoves[paramIndex] && squares[paramIndex]\n              ? \" capture-moves\"\n              : \"\")\n          }\n          onClick={handleClick}\n        >\n          {isPieceObject(squares[paramIndex])}\n        </div>\n      );\n    }\n  }\n\n  const board_array = [];\n  for (var i = 0; i <= 63; i++) {\n    var starting_color = \"black\";\n    var quotient = Math.floor(i / 8);\n    if (isOdd(quotient)) {\n      if (i % 2) {\n        board_array.push(renderSquares(i, true));\n      } else {\n        board_array.push(renderSquares(i, false));\n      }\n    } else {\n      if (i % 2) {\n        board_array.push(renderSquares(i, false));\n      } else {\n        board_array.push(renderSquares(i, true));\n      }\n    }\n  }\n\n  return (\n    <div id=\"chessboard\">\n      {board_array}\n      {bottomNotation.map(function(notation, key) {\n        return (\n          <div key={key} className=\"bottom-notation\">\n            {notation}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Chessboard;\n","import React, { useContext } from \"react\";\nimport { HistoryContext } from \"../Store.js\";\n\nfunction History() {\n  const [history] = useContext(HistoryContext);\n  return (\n    <div id=\"history\">\n      <h2>Move History</h2>\n      {history.map((moves, index) => {\n        return <li key={index}>{moves}</li>;\n      })}\n    </div>\n  );\n}\n\nexport default History;\n","import React from \"react\";\nimport SideNotation from \"./components/side-notation\";\nimport Chessboard from \"./components/Chessboard\";\nimport History from \"./components/History\";\nimport Store from \"./Store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Store>\n      <div className=\"App\">\n        <h1>Chess in Javascript & SCSS</h1>\n        <SideNotation />\n        <Chessboard />\n        <History />\n      </div>\n    </Store>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
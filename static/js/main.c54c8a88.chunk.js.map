{"version":3,"sources":["components/side-notation.js","helpers.js","Store.js","components/Chessboard.js","components/History.js","components/Player-Turn.js","components/Sideinfo.js","App.js","index.js"],"names":["SideNotation","side_container","i","push","react_default","a","createElement","key","className","factory_piece","name","emoji","color","moveset","location","history","captureSet","status","Object","assign","create","isFree","getName","this","getColor","getMoveset","getCaptureSet","getEmoji","getLocation","setLocation","updateHistory","notation","setStatus","getIsFree","setBlocked","setFree","validate","length","getBoardNotation","paramTarget","rank","chessboard","document","getElementById","index","Array","prototype","indexOf","call","children","Math","floor","isOdd","num","alternateColor","HistoryContext","React","createContext","TurnContext","Store","_ref","_useState","useState","_useState2","slicedToArray","setHistory","_useState3","_useState4","isWhiteNext","setIsWhiteNext","Provider","value","bottomNotation","white_combined_position","fill","map","pawn","idx","concat","neutral_positions","generated_black_pawn_position","black_combined_position","Chessboard","_useContext","useContext","_useContext2","_useContext3","_useContext4","squares","setSquares","isSelected","setIsSelected","_useState5","_useState6","possibleMoves","setpossibleMoves","handleClick","event","target","nextSquares","slice","nextSelected","nextPossibleMoves","forEach","opponentSquare","selfSquare","hasOwnProperty","currentSelected","nextHistory","isPieceObject","obj","renderSquares","paramIndex","alternate","starting_color","onClick","board_array","quotient","id","History","moves","PlayerTurn","Sideinfo","Player_Turn","components_History","App","src_Store","components_side_notation","components_Chessboard","components_Sideinfo","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.c54c8a88.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./side-notation.css\";\n\nfunction SideNotation() {\n  const side_container = [];\n  for (var i = 8; i >= 1; i--) {\n    side_container.push(\n      <div key={i} className=\"side-notation\">\n        {i}\n      </div>\n    );\n  }\n\n  return <div className=\"side-notation\">{side_container}</div>;\n}\n\nexport default SideNotation;\n","export const factory_piece = function(\n  name,\n  emoji,\n  color,\n  moveset,\n  location,\n  history,\n  captureSet,\n  status\n) {\n  const piece = {\n    isFree: true,\n\n    getName: function() {\n      return this.name;\n    },\n    getColor: function() {\n      return this.color;\n    },\n    getMoveset: function() {\n      return this.moveset;\n    },\n    getCaptureSet: function() {\n      return this.captureSet;\n    },\n    getEmoji: function() {\n      return this.emoji;\n    },\n    getLocation: function() {\n      return this.location;\n    },\n    setLocation: function(location) {\n      this.location = location;\n    },\n    updateHistory: function(notation) {\n      this.history.push(notation);\n    },\n    setStatus: function(status) {\n      this.status = status;\n    },\n    getIsFree: function() {\n      return this.isFree;\n    },\n    setBlocked: function() {\n      this.isFree = false;\n    },\n    setFree: function() {\n      this.isFree = true;\n    },\n    validate: function() {\n      // frees up block status before every click\n      this.setFree();\n      switch (this.emoji) {\n        case \"♟\":\n          if (this.history.length > 0) {\n            this.moveset = [8];\n          }\n          this.captureSet = [7, 9];\n          break;\n        case \"♙\":\n          if (this.history.length > 0) {\n            this.moveset = [-8];\n          }\n          this.captureSet = [-7, -9];\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  let obj = Object.assign(Object.create(piece), {\n    name,\n    emoji,\n    color,\n    moveset,\n    location,\n    history,\n    captureSet,\n    status\n  });\n  return obj;\n};\n\nexport const getBoardNotation = function(paramTarget) {\n  let chessboard = document.getElementById(\"chessboard\");\n  let index = Array.prototype.indexOf.call(chessboard.children, paramTarget);\n  let rank;\n  let file;\n\n  let rank_arr = [8, 7, 6, 5, 4, 3, 2, 1];\n  let file_arr = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\n  rank = rank_arr[Math.floor(index / 8)];\n  file = file_arr[index % 8];\n\n  let notation = file + rank;\n  // console.log(\"algebraic notation\", file + rank);\n  //console.log(\"simple index\", index);\n\n  return { notation, index };\n};\n\nexport const isOdd = function(num) {\n  return num % 2;\n};\n\nexport const alternateColor = function(color) {\n  if (color === \"black\") {\n    color = \"white\";\n  } else {\n    color = \"black\";\n  }\n  return color;\n};\n","import React, { useState } from \"react\";\n\nexport const HistoryContext = React.createContext();\nexport const TurnContext = React.createContext();\n\nconst Store = ({ children }) => {\n  const [history, setHistory] = useState([]);\n  const [isWhiteNext, setIsWhiteNext] = useState(true);\n\n  return (\n    <HistoryContext.Provider value={[history, setHistory]}>\n      <TurnContext.Provider value={[isWhiteNext, setIsWhiteNext]}>\n        {children}\n      </TurnContext.Provider>\n    </HistoryContext.Provider>\n  );\n};\n\nexport default Store;\n","import React, { useState, useContext } from \"react\";\nimport {\n  getBoardNotation,\n  isOdd,\n  alternateColor,\n  factory_piece\n} from \"../helpers.js\";\nimport { HistoryContext } from \"../Store\";\nimport { TurnContext } from \"../Store\";\n\nconst bottomNotation = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\nconst white_position = [\"♖\", \"♘\", \"♗\", \"♕\", \"♔\", \"♗\", \"♘\", \"♖\"];\nconst white_pawn_position = Array(8).fill(\"♙\");\nconst generated_white_pawn_position = white_pawn_position.map((pawn, idx) => {\n  const obj = factory_piece(\n    \"pawn\",\n    pawn,\n    \"white\",\n    [-8, -16],\n    idx + 48,\n    [],\n    [],\n    \"active\"\n  );\n  return obj;\n});\nconst white_combined_position = generated_white_pawn_position.concat(\n  white_position\n);\n\nconst neutral_positions = Array(4 * 8).fill(\"\");\nconst black_position = [\"♜\", \"♞\", \"♝\", \"♛\", \"♚\", \"♝\", \"♞\", \"♜\"];\nconst black_pawn_position = Array(8).fill(\"♟\");\n\nconst generated_black_pawn_position = black_pawn_position.map((pawn, idx) => {\n  const obj = factory_piece(\n    \"pawn\",\n    pawn,\n    \"black\",\n    [8, 16],\n    idx + 8,\n    [],\n    [],\n    \"active\"\n  );\n  return obj;\n});\nconst black_combined_position = black_position.concat(\n  generated_black_pawn_position\n);\n\nfunction Chessboard() {\n  const [history, setHistory] = useContext(HistoryContext);\n  const [isWhiteNext, setIsWhiteNext] = useContext(TurnContext);\n  const [squares, setSquares] = useState(\n    black_combined_position\n      .concat(neutral_positions)\n      .concat(white_combined_position)\n  );\n  const [isSelected, setIsSelected] = useState(Array(64).fill(false));\n  const [possibleMoves, setpossibleMoves] = useState(Array(64).fill(false));\n\n  const handleClick = event => {\n    const { index } = getBoardNotation(event.target);\n    const nextSquares = squares.slice();\n    nextSquares[index] = squares[index];\n    setSquares(nextSquares);\n\n    if (isSquareNotClicked(isSelected[index])) {\n      const nextSelected = Array(64).fill(false);\n      nextSelected[index] = true;\n      setIsSelected(nextSelected);\n\n      const nextPossibleMoves = Array(64).fill(false);\n      setpossibleMoves(nextPossibleMoves);\n    }\n\n    if (isObject(squares[index])) {\n      // console.log(\"possibleMoves\", possibleMoves[index]);\n      if (\n        isWhiteNext &&\n        squares[index].getColor() === \"black\" &&\n        !possibleMoves[index]\n      ) {\n        // console.log(\"reject!\", possibleMoves[index]);\n        setIsSelected(Array(64).fill(false));\n        return;\n      } else if (\n        !isWhiteNext &&\n        squares[index].getColor() === \"white\" &&\n        !possibleMoves[index]\n      ) {\n        // console.log(\"reject!\", possibleMoves[index]);\n        setIsSelected(Array(64).fill(false));\n        return;\n      }\n      const nextPossibleMoves = Array(64).fill(false);\n      squares[index].validate();\n      squares[index].getMoveset().forEach(idx => {\n        if (!nextSquares[index + idx] && squares[index].getIsFree()) {\n          nextPossibleMoves[index + idx] = true;\n        } else {\n          squares[index].setBlocked();\n        }\n      });\n      squares[index].getCaptureSet().forEach(idx => {\n        if (squareContainsOpponent(nextSquares[index + idx], squares[index])) {\n          nextPossibleMoves[index + idx] = true;\n        }\n      });\n      setpossibleMoves(nextPossibleMoves);\n    }\n\n    if (possibleMoves[index]) {\n      const nextSquares = squares.slice();\n      const currentSelected = Array.prototype.indexOf.call(isSelected, true);\n      nextSquares[currentSelected] = false;\n      nextSquares[index] = squares[currentSelected];\n      squares[currentSelected].setLocation(index);\n      squares[currentSelected].updateHistory(currentSelected);\n      const nextHistory = history.slice();\n      const { notation } = getBoardNotation(\n        document.getElementById(\"chessboard\").children[currentSelected]\n      );\n      nextHistory.push(notation + ` (${squares[currentSelected].getColor()})`);\n      setHistory(nextHistory);\n      setSquares(nextSquares);\n\n      // clear possible moves and highlighted squares\n      const nextPossibleMoves = Array(64).fill(false);\n      setpossibleMoves(nextPossibleMoves);\n      setIsSelected(Array(64).fill(false));\n      const isBlackNext = !isWhiteNext;\n      setIsWhiteNext(isBlackNext);\n    }\n  };\n\n  function doesChessPieceColorMatchPlayerTurn(piece, color) {\n    // match if the current piece clicked on and turn color is the same\n    switch (color) {\n      case \"white\":\n        if (piece.getColor() === \"white\" && !isWhiteNext) {\n          return true;\n        } else {\n          return false;\n        }\n      case \"black\":\n        if (piece.getColor() === \"black\" && isWhiteNext) {\n          return true;\n        } else {\n          return false;\n        }\n    }\n  }\n\n  function squareContainsOpponent(opponentSquare, selfSquare) {\n    //checks if possible capture square contains an opponent by checking if square contains object and that the colors do not match\n    return (\n      opponentSquare.hasOwnProperty(\"color\") &&\n      selfSquare.hasOwnProperty(\"color\") &&\n      opponentSquare.getColor() !== selfSquare.getColor()\n    );\n  }\n\n  function isSquareNotClicked(square) {\n    return square === false;\n  }\n\n  function isObject(squareObject) {\n    return typeof squareObject == \"object\";\n  }\n\n  function isPieceObject(obj) {\n    return obj.hasOwnProperty(\"emoji\") ? obj.getEmoji() : obj;\n  }\n\n  function renderSquares(paramIndex, alternate) {\n    // if true, start the square on this rank with black\n    if (alternate) {\n      return (\n        <div\n          key={paramIndex}\n          className={\n            alternateColor(starting_color) +\n            (isSelected[paramIndex] ? \" selected\" : \"\") +\n            (possibleMoves[paramIndex] ? \" black-moves\" : \"\") +\n            (possibleMoves[paramIndex] && squares[paramIndex]\n              ? \" capture-moves\"\n              : \"\")\n          }\n          onClick={handleClick}\n        >\n          {isPieceObject(squares[paramIndex])}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          key={paramIndex}\n          className={\n            starting_color +\n            (isSelected[paramIndex] ? \" selected\" : \"\") +\n            (possibleMoves[paramIndex] ? \" black-moves\" : \"\") +\n            (possibleMoves[paramIndex] && squares[paramIndex]\n              ? \" capture-moves\"\n              : \"\")\n          }\n          onClick={handleClick}\n        >\n          {isPieceObject(squares[paramIndex])}\n        </div>\n      );\n    }\n  }\n\n  const board_array = [];\n  for (var i = 0; i <= 63; i++) {\n    var starting_color = \"black\";\n    var quotient = Math.floor(i / 8);\n    if (isOdd(quotient)) {\n      if (i % 2) {\n        board_array.push(renderSquares(i, true));\n      } else {\n        board_array.push(renderSquares(i, false));\n      }\n    } else {\n      if (i % 2) {\n        board_array.push(renderSquares(i, false));\n      } else {\n        board_array.push(renderSquares(i, true));\n      }\n    }\n  }\n\n  return (\n    <div id=\"chessboard\">\n      {board_array}\n      {bottomNotation.map(function(notation, key) {\n        return (\n          <div key={key} className=\"bottom-notation\">\n            {notation}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Chessboard;\n","import React, { useContext } from \"react\";\nimport { HistoryContext } from \"../Store.js\";\n\nfunction History() {\n  const [history] = useContext(HistoryContext);\n  return (\n    <div id=\"history\">\n      <h2>Move History</h2>\n      {history.map((moves, index) => {\n        return <li key={index}>{moves}</li>;\n      })}\n    </div>\n  );\n}\n\nexport default History;\n","import React, { useContext } from \"react\";\nimport { TurnContext } from \"../Store.js\";\n\nfunction PlayerTurn() {\n  const [isWhiteNext] = useContext(TurnContext);\n  return (\n    <div id=\"playerturn\">\n      <h2>Player Turn</h2>\n      <div className=\"container\">\n        <div className={isWhiteNext ? \"turn-display current\" : \"turn-display\"}>\n          White\n        </div>\n        <div className={!isWhiteNext ? \"turn-display current\" : \"turn-display\"}>\n          Black\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerTurn;\n","import React from \"react\";\nimport History from \"./History\";\nimport PlayerTurn from \"./Player-Turn\";\n\nfunction Sideinfo() {\n  return (\n    <div id=\"sideinfo\">\n      <PlayerTurn />\n      <History />\n    </div>\n  );\n}\n\nexport default Sideinfo;\n","import React from \"react\";\nimport SideNotation from \"./components/side-notation\";\nimport Chessboard from \"./components/Chessboard\";\nimport Sideinfo from \"./components/Sideinfo\";\nimport Store from \"./Store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Store>\n      <div className=\"App\">\n        <h1>React Chess</h1>\n        <SideNotation />\n        <Chessboard />\n        <Sideinfo />\n      </div>\n    </Store>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
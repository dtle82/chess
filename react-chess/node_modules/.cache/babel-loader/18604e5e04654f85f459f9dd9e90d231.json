{"ast":null,"code":"var _jsxFileName = \"/Users/danh/Desktop/Chess/react-chess/src/Chessboard/Chessboard.js\";\nimport React, { useState } from \"react\";\nimport \"./Chessboard.css\";\n\nfunction Chessboard() {\n  const bottomNotation = [a, b, c, d, e, f, g, h];\n\n  function isOdd(num) {\n    return num % 2;\n  }\n\n  function alternateColor(color) {\n    var color;\n\n    if (color == \"black\") {\n      color = \"white\";\n    } else {\n      color = \"black\";\n    }\n\n    return color;\n  }\n\n  const board_array = [];\n\n  for (var i = 0; i <= 63; i++) {\n    var starting_color = \"black\";\n    var quotient = Math.floor(i / 8);\n\n    if (isOdd(quotient)) {\n      if (i % 2) {\n        board_array.push(React.createElement(\"div\", {\n          className: alternateColor(starting_color),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      } else {\n        board_array.push(React.createElement(\"div\", {\n          className: starting_color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      }\n    } else {\n      if (i % 2) {\n        board_array.push(React.createElement(\"div\", {\n          className: starting_color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }));\n      } else {\n        board_array.push(React.createElement(\"div\", {\n          className: alternateColor(starting_color),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Chessboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"chessboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, board_array, React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"a\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"b\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"c\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"d\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"e\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"f\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"g\"), React.createElement(\"div\", {\n    className: \"bottom-notation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"h\")));\n}\n\nexport default Chessboard;","map":{"version":3,"sources":["/Users/danh/Desktop/Chess/react-chess/src/Chessboard/Chessboard.js"],"names":["React","useState","Chessboard","bottomNotation","a","b","c","d","e","f","g","h","isOdd","num","alternateColor","color","board_array","i","starting_color","quotient","Math","floor","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,CAAvB;;AACA,WAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,WAAOA,GAAG,GAAG,CAAb;AACD;;AACD,WAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAIA,KAAJ;;AACA,QAAIA,KAAK,IAAI,OAAb,EAAsB;AACpBA,MAAAA,KAAK,GAAG,OAAR;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,GAAG,OAAR;AACD;;AACD,WAAOA,KAAP;AACD;;AACD,QAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,QAAIC,cAAc,GAAG,OAArB;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,CAAf,CAAf;;AACA,QAAIL,KAAK,CAACO,QAAD,CAAT,EAAqB;AACnB,UAAIF,CAAC,GAAG,CAAR,EAAW;AACTD,QAAAA,WAAW,CAACM,IAAZ,CAAiB;AAAK,UAAA,SAAS,EAAER,cAAc,CAACI,cAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACD,OAFD,MAEO;AACLF,QAAAA,WAAW,CAACM,IAAZ,CAAiB;AAAK,UAAA,SAAS,EAAEJ,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACD;AACF,KAND,MAMO;AACL,UAAID,CAAC,GAAG,CAAR,EAAW;AACTD,QAAAA,WAAW,CAACM,IAAZ,CAAiB;AAAK,UAAA,SAAS,EAAEJ,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACD,OAFD,MAEO;AACLF,QAAAA,WAAW,CAACM,IAAZ,CAAiB;AAAK,UAAA,SAAS,EAAER,cAAc,CAACI,cAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACD;AACF;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WADH,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EAKE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,EAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,EAOE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,EAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,EASE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,CADF,CADF;AAeD;;AAED,eAAed,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Chessboard.css\";\n\nfunction Chessboard() {\n  const bottomNotation = [a, b, c, d, e, f, g, h];\n  function isOdd(num) {\n    return num % 2;\n  }\n  function alternateColor(color) {\n    var color;\n    if (color == \"black\") {\n      color = \"white\";\n    } else {\n      color = \"black\";\n    }\n    return color;\n  }\n  const board_array = [];\n  for (var i = 0; i <= 63; i++) {\n    var starting_color = \"black\";\n    var quotient = Math.floor(i / 8);\n    if (isOdd(quotient)) {\n      if (i % 2) {\n        board_array.push(<div className={alternateColor(starting_color)} />);\n      } else {\n        board_array.push(<div className={starting_color} />);\n      }\n    } else {\n      if (i % 2) {\n        board_array.push(<div className={starting_color} />);\n      } else {\n        board_array.push(<div className={alternateColor(starting_color)} />);\n      }\n    }\n  }\n\n  return (\n    <div className=\"Chessboard\">\n      <div id=\"chessboard\">\n        {board_array}\n        <div className=\"bottom-notation\">a</div>\n        <div className=\"bottom-notation\">b</div>\n        <div className=\"bottom-notation\">c</div>\n        <div className=\"bottom-notation\">d</div>\n        <div className=\"bottom-notation\">e</div>\n        <div className=\"bottom-notation\">f</div>\n        <div className=\"bottom-notation\">g</div>\n        <div className=\"bottom-notation\">h</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chessboard;\n"]},"metadata":{},"sourceType":"module"}